version: "3.5"

volumes:
  celestia_prometheus_data: {}
  celestia_grafana_data: {}
  celestia_alertmanager_data: {}
  celestia_loki_data: {}

services:
  celestia_prometheus:
    image: prom/prometheus:v2.47.0
    container_name: celestia_prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - celestia_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--log.level=warn'
      - '--storage.tsdb.retention.time=360d'
    ports:
      - "9090:9090"
    restart: always

  # default login credentials: admin/admin
  celestia_grafana:
    image: grafana/grafana:10.1.4
    env_file: ./grafana/grafana.conf
    container_name: celestia_grafana
    volumes:
      - celestia_grafana_data:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "9999:3000"
    restart: always

  celestia_da_exporter:
    build: .
    container_name: celestia_da_exporter
    ports:
      - "9300:9300"
    restart: always
    environment:
      - FLASK_DEBUG=true
    entrypoint: ["/usr/bin/da-exporter", "--node", "${BRIDGE_RPC}", "--token", "${BRIDGE_TOKEN}"]

  celestia_alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: celestia_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./prometheus/alert_manager:/etc/alertmanager:ro
      - celestia_alertmanager_data:/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/data'
      - '--log.level=debug'
    hostname: 'alert_manager'
    restart: always

  celestia_cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: celestia_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080

  celestia_node_exporter:
    image: prom/node-exporter:v1.6.1
    container_name: celestia_node_exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
      - '--collector.systemd'
    pid: host
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - "9100:9100"

  celestia_loki:
    container_name: celestia_loki
    image: grafana/loki:2.9.1
    restart: always
    # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
    # Loki would not have permissions to create the directories.
    # Therefore, the init container changes permissions of the mounted directory.
    user: root
    ports:
      - "3100:3100"
    volumes:
      - celestia_loki_data:/mnt
      - ./loki/loki.yaml:/etc/loki/loki.yaml:ro
      - ./loki/rules:/etc/loki/rules/fake:ro
    command: -config.file=/etc/loki/loki.yaml

  celestia_promtail:
    container_name: celestia_promtail
    image: grafana/promtail:2.9.1
    restart: always
    volumes:
      - /var/log:/var/log:ro
      - ./loki/promtail.yaml:/etc/promtail/promtail.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/promtail.yaml